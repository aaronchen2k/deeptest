definitions:
  _domain.PageData:
    properties:
      page:
        type: integer
      pageSize:
        type: integer
      result: {}
      total:
        type: integer
    type: object
  _domain.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  consts.AuditStatus:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - Init
    - Agreed
    - Refused
  consts.ClientAuthenticationWay:
    enum:
    - sendAsBasicAuthHeader
    - sendClientCredentialsInBody
    type: string
    x-enum-varnames:
    - SendAsBasicAuthHeader
    - SendClientCredentialsInBody
  consts.GrantType:
    enum:
    - authorizationCode
    - authorizationCodeWithPKCE
    - implicit
    - passwordCredential
    - clientCredential
    type: string
    x-enum-varnames:
    - AuthorizationCode
    - AuthorizationCodeWithPKCE
    - Implicit
    - PasswordCredential
    - ClientCredential
  consts.ProcessorCategory:
    enum:
    - processor_root
    - processor_interface
    - processor_group
    - processor_logic
    - processor_loop
    - processor_timer
    - processor_print
    - processor_variable
    - processor_assertion
    - processor_extractor
    - processor_cookie
    - processor_data
    type: string
    x-enum-varnames:
    - ProcessorRoot
    - ProcessorInterface
    - ProcessorGroup
    - ProcessorLogic
    - ProcessorLoop
    - ProcessorTimer
    - ProcessorPrint
    - ProcessorVariable
    - ProcessorAssertion
    - ProcessorExtractor
    - ProcessorCookie
    - ProcessorData
  consts.ProcessorType:
    enum:
    - processor_root_default
    - processor_interface_default
    - processor_group_default
    - processor_timer_default
    - processor_print_default
    - processor_logic_if
    - processor_logic_else
    - processor_loop_time
    - processor_loop_in
    - processor_loop_range
    - processor_loop_until
    - processor_loop_break
    - processor_variable_set
    - processor_variable_clear
    - processor_assertion_default
    - processor_extractor_boundary
    - processor_extractor_jsonquery
    - processor_extractor_htmlquery
    - processor_extractor_xmlquery
    - processor_cookie_get
    - processor_cookie_set
    - processor_cookie_clear
    - processor_data_text
    - processor_data_excel
    type: string
    x-enum-varnames:
    - ProcessorRootDefault
    - ProcessorInterfaceDefault
    - ProcessorGroupDefault
    - ProcessorTimerDefault
    - ProcessorPrintDefault
    - ProcessorLogicIf
    - ProcessorLogicElse
    - ProcessorLoopTime
    - ProcessorLoopIn
    - ProcessorLoopRange
    - ProcessorLoopUntil
    - ProcessorLoopBreak
    - ProcessorVariableSet
    - ProcessorVariableClear
    - ProcessorAssertionDefault
    - ProcessorExtractorBoundary
    - ProcessorExtractorJsonQuery
    - ProcessorExtractorHtmlQuery
    - ProcessorExtractorXmlQuery
    - ProcessorCookieGet
    - ProcessorCookieSet
    - ProcessorCookieClear
    - ProcessorDataText
    - ProcessorDataExcel
  consts.RoleType:
    enum:
    - admin
    - user
    - tester
    - developer
    - product_manager
    type: string
    x-enum-varnames:
    - Admin
    - User
    - Tester
    - Developer
    - ProductManager
  consts.SourceType:
    enum:
    - 1
    type: integer
    x-enum-varnames:
    - Swagger
  iris.Map:
    additionalProperties: true
    type: object
  model.Auth2Token:
    properties:
      createdAt:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      projectId:
        type: integer
      token:
        type: string
      tokenType:
        type: string
      updatedAt:
        type: string
    type: object
  model.Category:
    properties:
      children:
        items:
          $ref: '#/definitions/model.Processor'
        type: array
      createdAt:
        type: string
      desc:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      isDir:
        type: boolean
      name:
        type: string
      ordr:
        type: integer
      parentId:
        type: integer
      projectId:
        type: integer
      serveId:
        type: integer
      slots:
        $ref: '#/definitions/iris.Map'
      sourceType:
        $ref: '#/definitions/consts.SourceType'
      type:
        $ref: '#/definitions/serverConsts.CategoryDiscriminator'
      updatedAt:
        type: string
      useId:
        type: integer
    type: object
  model.DebugInterfaceOAuth20:
    properties:
      accessToken:
        type: string
      accessTokenURL:
        type: string
      authURL:
        type: string
      callbackUrl:
        type: string
      clientAuthentication:
        $ref: '#/definitions/consts.ClientAuthenticationWay'
      clientID:
        type: string
      clientSecret:
        type: string
      createdAt:
        type: string
      disabled:
        type: boolean
      grantType:
        $ref: '#/definitions/consts.GrantType'
      headerPrefix:
        type: string
      id:
        type: integer
      interfaceId:
        type: integer
      name:
        type: string
      scope:
        type: string
      state:
        type: string
      updatedAt:
        type: string
    type: object
  model.Processor:
    properties:
      children:
        items:
          $ref: '#/definitions/model.Processor'
        type: array
      comments:
        type: string
      createdAt:
        type: string
      createdBy:
        type: integer
      disabled:
        type: boolean
      endpointInterfaceId:
        type: integer
      entityCategory:
        $ref: '#/definitions/consts.ProcessorCategory'
      entityId:
        description: Debug Interface Id for ProcessorInterface type
        type: integer
      entityType:
        $ref: '#/definitions/consts.ProcessorType'
      id:
        type: integer
      name:
        type: string
      ordr:
        type: integer
      parentId:
        type: integer
      projectId:
        type: integer
      scenarioId:
        type: integer
      slots:
        $ref: '#/definitions/iris.Map'
      updatedAt:
        type: string
    type: object
  model.Project:
    properties:
      adminId:
        type: integer
      adminName:
        type: string
      createdAt:
        type: string
      desc:
        type: string
      disabled:
        type: boolean
      environmentId:
        type: integer
      id:
        type: integer
      includeExample:
        type: boolean
      logo:
        type: string
      name:
        type: string
      orgId:
        type: integer
      schemaId:
        type: integer
      shortName:
        type: string
      spec:
        type: string
      spec2:
        type: string
      type:
        $ref: '#/definitions/serverConsts.ProjectType'
      updatedAt:
        type: string
    type: object
  model.ProjectMemberAudit:
    properties:
      applyUserId:
        type: integer
      applyUserName:
        type: string
      auditUserId:
        type: integer
      auditUserName:
        type: string
      createdAt:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      projectId:
        type: integer
      projectName:
        type: string
      projectRoleName:
        $ref: '#/definitions/consts.RoleType'
      status:
        $ref: '#/definitions/consts.AuditStatus'
      updatedAt:
        type: string
    type: object
  model.ProjectMemberRole:
    properties:
      adminId:
        type: integer
      adminName:
        type: string
      createdAt:
        type: string
      desc:
        type: string
      disabled:
        type: boolean
      environmentId:
        type: integer
      id:
        type: integer
      includeExample:
        type: boolean
      logo:
        type: string
      name:
        type: string
      orgId:
        type: integer
      roleId:
        type: integer
      roleName:
        $ref: '#/definitions/consts.RoleType'
      schemaId:
        type: integer
      shortName:
        type: string
      spec:
        type: string
      spec2:
        type: string
      type:
        $ref: '#/definitions/serverConsts.ProjectType'
      updatedAt:
        type: string
    type: object
  serverConsts.CategoryDiscriminator:
    enum:
    - endpoint
    - scenario
    - plan
    type: string
    x-enum-varnames:
    - EndpointCategory
    - ScenarioCategory
    - PlanCategory
  serverConsts.DropPos:
    enum:
    - -1
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - Before
    - Inner
    - After
  serverConsts.ProjectType:
    enum:
    - full
    - debug
    type: string
    x-enum-varnames:
    - Full
    - Debug
  serverDomain.ApplyProjectReq:
    properties:
      applyUserId:
        type: integer
      description:
        type: string
      projectId:
        type: integer
      projectRoleName:
        $ref: '#/definitions/consts.RoleType'
    required:
    - projectId
    - projectRoleName
    type: object
  serverDomain.AuditProjectPaginate:
    properties:
      applyUserId:
        type: integer
      auditUserId:
        type: integer
      field:
        type: string
      order:
        type: string
      page:
        type: integer
      pageSize:
        type: integer
      type:
        type: integer
    type: object
  serverDomain.AuditProjectReq:
    properties:
      id:
        type: integer
      status:
        $ref: '#/definitions/consts.AuditStatus'
    required:
    - id
    - status
    type: object
  serverDomain.Category:
    properties:
      children:
        items:
          $ref: '#/definitions/serverDomain.Category'
        type: array
      count:
        type: integer
      desc:
        type: string
      id:
        type: integer
      name:
        type: string
      parentId:
        type: integer
      slots:
        $ref: '#/definitions/iris.Map'
    type: object
  serverDomain.CategoryCreateReq:
    properties:
      mode:
        type: string
      moduleId:
        type: string
      name:
        type: string
      projectId:
        type: integer
      serveId:
        type: integer
      targetId:
        type: integer
      type:
        $ref: '#/definitions/serverConsts.CategoryDiscriminator'
    type: object
  serverDomain.CategoryMoveReq:
    properties:
      dragKey:
        type: integer
      dropKey:
        type: integer
      dropPos:
        $ref: '#/definitions/serverConsts.DropPos'
      type:
        $ref: '#/definitions/serverConsts.CategoryDiscriminator'
    type: object
  serverDomain.CategoryReq:
    properties:
      desc:
        type: string
      id:
        type: integer
      name:
        type: string
      parent:
        type: integer
    type: object
  serverDomain.DataReq:
    properties:
      clearData:
        type: boolean
      sys:
        $ref: '#/definitions/serverDomain.DataSys'
    type: object
  serverDomain.DataSys:
    properties:
      adminPassword:
        type: string
    type: object
  serverDomain.LoginReq:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  serverDomain.LoginResp:
    properties:
      id:
        type: integer
      password:
        type: string
      token:
        type: string
    type: object
  serverDomain.MemberResp:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      roleId:
        type: integer
      roleName:
        $ref: '#/definitions/consts.RoleType'
      username:
        type: string
    type: object
  serverDomain.ProjectMemberRemoveReq:
    properties:
      projectId:
        type: integer
      userId:
        type: integer
    type: object
  serverDomain.ProjectReq:
    properties:
      adminId:
        type: integer
      adminName:
        type: string
      createdAt:
        type: string
      desc:
        type: string
      id:
        type: integer
      includeExample:
        type: boolean
      logo:
        type: string
      name:
        type: string
      orgId:
        type: integer
      schemaId:
        type: integer
      shortName:
        type: string
      type:
        $ref: '#/definitions/serverConsts.ProjectType'
      updatedAt:
        type: string
    type: object
  serverDomain.RegisterReq:
    properties:
      confirm:
        type: string
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - confirm
    - email
    - password
    - username
    type: object
  serverDomain.ResetPasswordReq:
    properties:
      password:
        type: string
      username:
        type: string
      vcode:
        type: string
    required:
    - password
    - username
    - vcode
    type: object
  serverDomain.UpdateProjectMemberReq:
    properties:
      projectId:
        type: integer
      projectRoleId:
        type: integer
      userId:
        type: integer
    type: object
info:
  contact:
    email: 462626@qq.com
    name: API Support
    url: https://github.com/aaronchen2k/deeptest/issues
  title: DeepTest服务端API文档
  version: "3.0"
paths:
  /api/v1/account/forgotPassword:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户名或者密码
        in: query
        name: usernameOrPassword
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 忘记密码
      tags:
      - 认证模块
  /api/v1/account/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: 登录的请求体
        in: body
        name: LoginReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.LoginResp'
              type: object
      summary: 登录
      tags:
      - 认证模块
  /api/v1/account/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: 注册的请求体
        in: body
        name: RegisterReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.RegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 注册
      tags:
      - 认证模块
  /api/v1/account/resetPassword:
    post:
      consumes:
      - application/json
      parameters:
      - description: 重置密码的参数
        in: body
        name: ResetPasswordReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ResetPasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 重置密码
      tags:
      - 认证模块
  /api/v1/auth/getOAuth2AccessToken:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: accessTokenURL
        in: query
        name: accessTokenURL
        required: true
        type: string
      - description: clientId
        in: query
        name: clientId
        required: true
        type: string
      - description: clientSecret
        in: query
        name: clientSecret
        required: true
        type: string
      - description: code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/iris.Map'
              type: object
      summary: 调用认证服务生成访问令牌
      tags:
      - 授权模块
  /api/v1/auth/listOAuth2Token:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Auth2Token'
                  type: array
              type: object
      summary: 加载访问令牌到接口
      tags:
      - 授权模块
  /api/v1/auth/oauth2Authorization:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 生成OAuth认证信息的请求体
        in: body
        name: DebugInterfaceOAuth20
        required: true
        schema:
          $ref: '#/definitions/model.DebugInterfaceOAuth20'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    url:
                      type: string
                  type: object
              type: object
      summary: 生成OAuth认证信息
      tags:
      - 授权模块
  /api/v1/auth/removeToken:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: token id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除访问令牌
      tags:
      - 授权模块
  /api/v1/auth/useOAuth2AccessToken:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 接口ID
        in: query
        name: interfaceId
        required: true
        type: integer
      - description: name
        in: query
        name: name
        required: true
        type: string
      - description: token
        in: query
        name: token
        required: true
        type: string
      - description: tokenType
        in: query
        name: tokenType
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    token:
                      type: string
                    tokenType:
                      type: string
                  type: object
              type: object
      summary: 加载访问令牌到接口
      tags:
      - 授权模块
  /api/v1/categories:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 新建分类的请求体
        in: body
        name: CategoryCreateReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.CategoryCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Category'
              type: object
      summary: 新建分类
      tags:
      - 分类管理
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 新建分类的请求体
        in: body
        name: CategoryReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.CategoryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.CategoryReq'
              type: object
      summary: 更新分类
      tags:
      - 分类管理
  /api/v1/categories/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 分类ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除节点
      tags:
      - 分类管理
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 分类ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Category'
              type: object
      summary: 分类详情
      tags:
      - 分类管理
  /api/v1/categories/{id}/updateName:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 分类ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新节点名称的请求体
        in: body
        name: CategoryReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.CategoryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新节点名称
      tags:
      - 分类管理
  /api/v1/categories/load:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 类型
        in: query
        name: type
        required: true
        type: integer
      - description: 服务ID
        in: query
        name: serveId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.Category'
              type: object
      summary: 分类树状数据
      tags:
      - 分类管理
  /api/v1/categories/move:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 移动节点的请求体
        in: body
        name: CategoryMoveReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.CategoryMoveReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 移动节点
      tags:
      - 分类管理
  /api/v1/init/initdb:
    post:
      consumes:
      - application/json
      parameters:
      - description: 初始化db
        in: body
        name: ProjectReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.DataReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 初始化项目
      tags:
      - 系统
  /api/v1/projects:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - in: query
        name: enabled
        type: string
      - in: query
        name: field
        type: string
      - in: query
        name: keywords
        type: string
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.Project'
                        type: array
                    type: object
              type: object
      summary: 项目列表
      tags:
      - 项目管理
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: Create project Request Object
        in: body
        name: ProjectReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ProjectReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    id:
                      type: integer
                  type: object
              type: object
      summary: 创建项目
      tags:
      - 项目管理
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: update project Request Object
        in: body
        name: ProjectReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ProjectReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新项目
      tags:
      - 项目管理
  /api/v1/projects/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 项目ID
        in: path
        name: id
        required: true
        type: integer
      - in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除项目
      tags:
      - 项目管理
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 项目ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Project'
              type: object
      summary: 项目详情
      tags:
      - 项目管理
  /api/v1/projects/apply:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 申请项目成员的请求体
        in: body
        name: ApplyProjectReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ApplyProjectReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 申请项目成员
      tags:
      - 项目管理
  /api/v1/projects/audit:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 审批操作的请求体
        in: body
        name: AuditProjectReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.AuditProjectReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 审批操作
      tags:
      - 项目管理
  /api/v1/projects/auditList:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 申请加入审批列表的请求体
        in: body
        name: AuditProjectPaginate
        required: true
        schema:
          $ref: '#/definitions/serverDomain.AuditProjectPaginate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.ProjectMemberAudit'
                        type: array
                    type: object
              type: object
      summary: 申请加入审批列表
      tags:
      - 项目管理
  /api/v1/projects/changeProject:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 项目ID
        in: body
        name: id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    id:
                      type: integer
                  type: object
              type: object
      summary: 切换用户默认项目
      tags:
      - 项目管理
  /api/v1/projects/changeUserRole:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 更新项目成员角色的请求体
        in: body
        name: UpdateProjectMemberReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.UpdateProjectMemberReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新项目成员的角色
      tags:
      - 项目管理
  /api/v1/projects/getByUser:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    ' currProject':
                      $ref: '#/definitions/model.Project'
                    ' recentProjects':
                      items:
                        $ref: '#/definitions/model.Project'
                      type: array
                    projects:
                      items:
                        $ref: '#/definitions/model.ProjectMemberRole'
                      type: array
                  type: object
              type: object
      summary: 获取用户参与的项目
      tags:
      - 项目管理
  /api/v1/projects/members:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - in: query
        name: enabled
        type: string
      - in: query
        name: field
        type: string
      - in: query
        name: keywords
        type: string
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/serverDomain.MemberResp'
                        type: array
                    type: object
              type: object
      summary: 获取项目成员
      tags:
      - 项目管理
  /api/v1/projects/removeMember:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 删除项目成员的请求体
        in: body
        name: ProjectMemberRemoveReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ProjectMemberRemoveReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除项目成员
      tags:
      - 项目管理
swagger: "2.0"
