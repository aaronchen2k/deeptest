// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/aaronchen2k/deeptest/issues",
            "email": "462626@qq.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/init/initdb": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "系统"
                ],
                "summary": "初始化项目",
                "parameters": [
                    {
                        "description": "初始化db",
                        "name": "ProjectReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/serverDomain.DataReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/_domain.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/projects": {
            "get": {
                "tags": [
                    "项目管理/项目列表"
                ],
                "summary": "项目列表",
                "parameters": [
                    {
                        "type": "string",
                        "name": "enabled",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "keywords",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/_domain.Response"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "项目管理/项目列表"
                ],
                "summary": "创建项目",
                "parameters": [
                    {
                        "description": "Create project Request Object",
                        "name": "ProjectReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/serverDomain.ProjectReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/_domain.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "_domain.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "serverConsts.ProjectType": {
            "type": "string",
            "enum": [
                "full",
                "debug"
            ],
            "x-enum-varnames": [
                "Full",
                "Debug"
            ]
        },
        "serverDomain.DataReq": {
            "type": "object",
            "properties": {
                "clearData": {
                    "type": "boolean"
                },
                "sys": {
                    "$ref": "#/definitions/serverDomain.DataSys"
                }
            }
        },
        "serverDomain.DataSys": {
            "type": "object",
            "properties": {
                "adminPassword": {
                    "type": "string"
                }
            }
        },
        "serverDomain.ProjectReq": {
            "type": "object",
            "properties": {
                "adminId": {
                    "type": "integer"
                },
                "adminName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "includeExample": {
                    "type": "boolean"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orgId": {
                    "type": "integer"
                },
                "schemaId": {
                    "type": "integer"
                },
                "shortName": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/serverConsts.ProjectType"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "3.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "DeepTest服务端API文档",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
