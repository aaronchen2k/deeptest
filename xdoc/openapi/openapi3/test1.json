{
  "components":
  {
    "schemas":
    {
      "Error":
      {
        "properties":
        {
          "code":
          {
            "format": "int64",
            "type": "integer"
          },
          "message":
          {
            "type": "string"
          }
        },
        "required":
        [
          "message",
          "code"
        ],
        "type": "object"
      },
      "Pet":
      {
        "allOf":
        [
          {
            "$ref": "#/components/schemas/PetRequest"
          },
          {
            "properties":
            {
              "id":
              {
                "description": "Unique id of the pet",
                "format": "int64",
                "type": "integer",
                "x-mock-type":"@increment(1)"
              }
            },
            "required":
            [
              "id"
            ]
          }
        ]
      },
      "PetRequest":
      {
        "properties":
        {
          "name":
          {
            "type": "string",
            "x-mock-type":"@first()_@last()"
          },
          "phone":
          {
            "type": "string",
            "x-mock-type":"@mobiphone()"
          },
          "status":
          {
            "description": "pet status in the store",
            "enum":
            [
              "available",
              "pending",
              "sold"
            ],
            "type": "string"
          }
        },
        "required":
        [
          "name"
        ]
      }
    }
  },
  "info":
  {
    "description": "This is a simple Petstore server. The main objective of this is to use create a working openapi 3 implementation in golang",
    "license":
    {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Petstore",
    "version": "1.0.0"
  },
  "openapi": "3.0.1",
  "paths":
  {
    "/json":
    {
      "get":
      {
        "operationId": "GetPets",
        "responses":
        {
          "200":
          {
            "content":
            {
              "application/json":
              {
                "schema":
                {
                  "items":
                  {
                    "$ref": "#/components/schemas/Pet"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "default":
          {
            "content":
            {
              "application/json":
              {
                "schema":
                {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "error"
          }
        },
        "summary": "Return all pets in the store",
        "tags":
        [
          "pet"
        ]
      },
      "post":
      {
        "operationId": "AddPet",
        "requestBody":
        {
          "content":
          {
            "application/json":
            {
              "schema":
              {
                "$ref": "#/components/schemas/PetRequest"
              }
            }
          },
          "description": "Pet object that needs to be added to the store",
          "required": true
        },
        "responses":
        {
          "201":
          {
            "content":
            {
              "application/json":
              {
                "schema":
                {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            },
            "description": "successful operation"
          },
          "default":
          {
            "content":
            {
              "application/json":
              {
                "schema":
                {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "error"
          }
        },
        "summary": "Add a new pet to the store",
        "tags":
        [
          "pet"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/pet/{petId}":
    {
      "delete":
      {
        "operationId": "DeletePet",
        "parameters":
        [
          {
            "description": "Pet id to delete",
            "in": "path",
            "name": "petId",
            "required": true,
            "schema":
            {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses":
        {
          "204":
          {
            "description": "Pet deleted"
          },
          "default":
          {
            "content":
            {
              "application/json":
              {
                "schema":
                {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "error"
          }
        },
        "summary": "Deletes a pet",
        "tags":
        [
          "pet"
        ]
      },
      "get":
      {
        "description": "Returns a single pet",
        "operationId": "GetPetById",
        "parameters":
        [
          {
            "description": "ID of pet to return",
            "in": "path",
            "name": "petId",
            "required": true,
            "schema":
            {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses":
        {
          "200":
          {
            "content":
            {
              "application/json":
              {
                "schema":
                {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            },
            "description": "successful operation"
          },
          "default":
          {
            "content":
            {
              "application/json":
              {
                "schema":
                {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "error"
          }
        },
        "summary": "Find pet by ID",
        "tags":
        [
          "pet"
        ]
      },
      "put":
      {
        "operationId": "UpdatePetById",
        "parameters":
        [
          {
            "description": "ID of pet that needs to be updated",
            "in": "path",
            "name": "petId",
            "required": true,
            "schema":
            {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody":
        {
          "content":
          {
            "application/json":
            {
              "schema":
              {
                "$ref": "#/components/schemas/PetRequest"
              }
            }
          },
          "description": "Pet object to update in the store",
          "required": true
        },
        "responses":
        {
          "204":
          {
            "description": "successful operation"
          },
          "default":
          {
            "content":
            {
              "application/json":
              {
                "schema":
                {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "error"
          }
        },
        "summary": "Updates a pet in the store with form data",
        "tags":
        [
          "pet"
        ]
      }
    }
  },
  "tags":
  [
    {
      "description": "Everything about your Pets",
      "name": "pet"
    }
  ]
}