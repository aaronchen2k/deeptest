// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: internal/performance/proto/performance.proto

package ptproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Scenario struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GenerateType string `protobuf:"bytes,3,opt,name=generateType,proto3" json:"generateType,omitempty"`
	// for constant generate type
	Target   int32 `protobuf:"varint,4,opt,name=target,proto3" json:"target,omitempty"`
	Duration int32 `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	// for ramp generate type
	Stages       []*Stage `protobuf:"bytes,6,rep,name=stages,proto3" json:"stages,omitempty"`
	ProcessorRaw []byte   `protobuf:"bytes,7,opt,name=processorRaw,proto3" json:"processorRaw,omitempty"`
}

func (x *Scenario) Reset() {
	*x = Scenario{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_performance_proto_performance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scenario) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scenario) ProtoMessage() {}

func (x *Scenario) ProtoReflect() protoreflect.Message {
	mi := &file_internal_performance_proto_performance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scenario.ProtoReflect.Descriptor instead.
func (*Scenario) Descriptor() ([]byte, []int) {
	return file_internal_performance_proto_performance_proto_rawDescGZIP(), []int{0}
}

func (x *Scenario) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Scenario) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Scenario) GetGenerateType() string {
	if x != nil {
		return x.GenerateType
	}
	return ""
}

func (x *Scenario) GetTarget() int32 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *Scenario) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Scenario) GetStages() []*Stage {
	if x != nil {
		return x.Stages
	}
	return nil
}

func (x *Scenario) GetProcessorRaw() []byte {
	if x != nil {
		return x.ProcessorRaw
	}
	return nil
}

type Stage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target   int32 `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	Duration int32 `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Loop     int32 `protobuf:"varint,3,opt,name=loop,proto3" json:"loop,omitempty"`
}

func (x *Stage) Reset() {
	*x = Stage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_performance_proto_performance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stage) ProtoMessage() {}

func (x *Stage) ProtoReflect() protoreflect.Message {
	mi := &file_internal_performance_proto_performance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stage.ProtoReflect.Descriptor instead.
func (*Stage) Descriptor() ([]byte, []int) {
	return file_internal_performance_proto_performance_proto_rawDescGZIP(), []int{1}
}

func (x *Stage) GetTarget() int32 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *Stage) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Stage) GetLoop() int32 {
	if x != nil {
		return x.Loop
	}
	return 0
}

type PerformanceExecStartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room                 string      `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	RunnerId             int32       `protobuf:"varint,2,opt,name=runnerId,proto3" json:"runnerId,omitempty"`
	RunnerName           string      `protobuf:"bytes,3,opt,name=runnerName,proto3" json:"runnerName,omitempty"`
	Title                string      `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Dur                  int64       `protobuf:"varint,5,opt,name=dur,proto3" json:"dur,omitempty"`
	Mode                 string      `protobuf:"bytes,6,opt,name=mode,proto3" json:"mode,omitempty"`
	Scenarios            []*Scenario `protobuf:"bytes,7,rep,name=scenarios,proto3" json:"scenarios,omitempty"`
	Weight               int32       `protobuf:"varint,8,opt,name=weight,proto3" json:"weight,omitempty"`
	EnvironmentId        int32       `protobuf:"varint,9,opt,name=environmentId,proto3" json:"environmentId,omitempty"`
	LocalVarsCacheRaw    []byte      `protobuf:"bytes,10,opt,name=localVarsCacheRaw,proto3" json:"localVarsCacheRaw,omitempty"`
	ExecSceneRaw         []byte      `protobuf:"bytes,11,opt,name=execSceneRaw,proto3" json:"execSceneRaw,omitempty"`
	ConductorGrpcAddress string      `protobuf:"bytes,12,opt,name=conductorGrpcAddress,proto3" json:"conductorGrpcAddress,omitempty"`
	InfluxdbAddress      string      `protobuf:"bytes,13,opt,name=influxdbAddress,proto3" json:"influxdbAddress,omitempty"`
	InfluxdbOrg          string      `protobuf:"bytes,14,opt,name=influxdbOrg,proto3" json:"influxdbOrg,omitempty"`
	InfluxdbToken        string      `protobuf:"bytes,15,opt,name=influxdbToken,proto3" json:"influxdbToken,omitempty"`
}

func (x *PerformanceExecStartReq) Reset() {
	*x = PerformanceExecStartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_performance_proto_performance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerformanceExecStartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceExecStartReq) ProtoMessage() {}

func (x *PerformanceExecStartReq) ProtoReflect() protoreflect.Message {
	mi := &file_internal_performance_proto_performance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceExecStartReq.ProtoReflect.Descriptor instead.
func (*PerformanceExecStartReq) Descriptor() ([]byte, []int) {
	return file_internal_performance_proto_performance_proto_rawDescGZIP(), []int{2}
}

func (x *PerformanceExecStartReq) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *PerformanceExecStartReq) GetRunnerId() int32 {
	if x != nil {
		return x.RunnerId
	}
	return 0
}

func (x *PerformanceExecStartReq) GetRunnerName() string {
	if x != nil {
		return x.RunnerName
	}
	return ""
}

func (x *PerformanceExecStartReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PerformanceExecStartReq) GetDur() int64 {
	if x != nil {
		return x.Dur
	}
	return 0
}

func (x *PerformanceExecStartReq) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *PerformanceExecStartReq) GetScenarios() []*Scenario {
	if x != nil {
		return x.Scenarios
	}
	return nil
}

func (x *PerformanceExecStartReq) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *PerformanceExecStartReq) GetEnvironmentId() int32 {
	if x != nil {
		return x.EnvironmentId
	}
	return 0
}

func (x *PerformanceExecStartReq) GetLocalVarsCacheRaw() []byte {
	if x != nil {
		return x.LocalVarsCacheRaw
	}
	return nil
}

func (x *PerformanceExecStartReq) GetExecSceneRaw() []byte {
	if x != nil {
		return x.ExecSceneRaw
	}
	return nil
}

func (x *PerformanceExecStartReq) GetConductorGrpcAddress() string {
	if x != nil {
		return x.ConductorGrpcAddress
	}
	return ""
}

func (x *PerformanceExecStartReq) GetInfluxdbAddress() string {
	if x != nil {
		return x.InfluxdbAddress
	}
	return ""
}

func (x *PerformanceExecStartReq) GetInfluxdbOrg() string {
	if x != nil {
		return x.InfluxdbOrg
	}
	return ""
}

func (x *PerformanceExecStartReq) GetInfluxdbToken() string {
	if x != nil {
		return x.InfluxdbToken
	}
	return ""
}

type PerformanceExecStopReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room string `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
}

func (x *PerformanceExecStopReq) Reset() {
	*x = PerformanceExecStopReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_performance_proto_performance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerformanceExecStopReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceExecStopReq) ProtoMessage() {}

func (x *PerformanceExecStopReq) ProtoReflect() protoreflect.Message {
	mi := &file_internal_performance_proto_performance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceExecStopReq.ProtoReflect.Descriptor instead.
func (*PerformanceExecStopReq) Descriptor() ([]byte, []int) {
	return file_internal_performance_proto_performance_proto_rawDescGZIP(), []int{3}
}

func (x *PerformanceExecStopReq) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

type PerformanceExecResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room        string                   `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	Timestamp   int64                    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Instruction string                   `protobuf:"bytes,3,opt,name=instruction,proto3" json:"instruction,omitempty"`
	ExecUUid    string                   `protobuf:"bytes,4,opt,name=execUUid,proto3" json:"execUUid,omitempty"`
	RunnerId    int32                    `protobuf:"varint,5,opt,name=runnerId,proto3" json:"runnerId,omitempty"`
	RunnerName  string                   `protobuf:"bytes,6,opt,name=runnerName,proto3" json:"runnerName,omitempty"`
	VuCount     int32                    `protobuf:"varint,7,opt,name=vuCount,proto3" json:"vuCount,omitempty"`
	Requests    []*PerformanceExecRecord `protobuf:"bytes,8,rep,name=requests,proto3" json:"requests,omitempty"`
	Metrics     *PerformanceExecMetrics  `protobuf:"bytes,9,opt,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *PerformanceExecResp) Reset() {
	*x = PerformanceExecResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_performance_proto_performance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerformanceExecResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceExecResp) ProtoMessage() {}

func (x *PerformanceExecResp) ProtoReflect() protoreflect.Message {
	mi := &file_internal_performance_proto_performance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceExecResp.ProtoReflect.Descriptor instead.
func (*PerformanceExecResp) Descriptor() ([]byte, []int) {
	return file_internal_performance_proto_performance_proto_rawDescGZIP(), []int{4}
}

func (x *PerformanceExecResp) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *PerformanceExecResp) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PerformanceExecResp) GetInstruction() string {
	if x != nil {
		return x.Instruction
	}
	return ""
}

func (x *PerformanceExecResp) GetExecUUid() string {
	if x != nil {
		return x.ExecUUid
	}
	return ""
}

func (x *PerformanceExecResp) GetRunnerId() int32 {
	if x != nil {
		return x.RunnerId
	}
	return 0
}

func (x *PerformanceExecResp) GetRunnerName() string {
	if x != nil {
		return x.RunnerName
	}
	return ""
}

func (x *PerformanceExecResp) GetVuCount() int32 {
	if x != nil {
		return x.VuCount
	}
	return 0
}

func (x *PerformanceExecResp) GetRequests() []*PerformanceExecRecord {
	if x != nil {
		return x.Requests
	}
	return nil
}

func (x *PerformanceExecResp) GetMetrics() *PerformanceExecMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type PerformanceExecRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId   int32  `protobuf:"varint,1,opt,name=recordId,proto3" json:"recordId,omitempty"`
	RecordName string `protobuf:"bytes,2,opt,name=recordName,proto3" json:"recordName,omitempty"`
	VuId       int32  `protobuf:"varint,3,opt,name=vuId,proto3" json:"vuId,omitempty"`
	Status     string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	StartTime  int64  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    int64  `protobuf:"varint,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Duration   int32  `protobuf:"varint,7,opt,name=duration,proto3" json:"duration,omitempty"`
	Msg        string `protobuf:"bytes,8,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PerformanceExecRecord) Reset() {
	*x = PerformanceExecRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_performance_proto_performance_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerformanceExecRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceExecRecord) ProtoMessage() {}

func (x *PerformanceExecRecord) ProtoReflect() protoreflect.Message {
	mi := &file_internal_performance_proto_performance_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceExecRecord.ProtoReflect.Descriptor instead.
func (*PerformanceExecRecord) Descriptor() ([]byte, []int) {
	return file_internal_performance_proto_performance_proto_rawDescGZIP(), []int{5}
}

func (x *PerformanceExecRecord) GetRecordId() int32 {
	if x != nil {
		return x.RecordId
	}
	return 0
}

func (x *PerformanceExecRecord) GetRecordName() string {
	if x != nil {
		return x.RecordName
	}
	return ""
}

func (x *PerformanceExecRecord) GetVuId() int32 {
	if x != nil {
		return x.VuId
	}
	return 0
}

func (x *PerformanceExecRecord) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PerformanceExecRecord) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PerformanceExecRecord) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *PerformanceExecRecord) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *PerformanceExecRecord) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PerformanceExecMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp     int64              `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CpuUsage      float64            `protobuf:"fixed64,2,opt,name=cpuUsage,proto3" json:"cpuUsage,omitempty"`
	MemoryUsage   float64            `protobuf:"fixed64,3,opt,name=memoryUsage,proto3" json:"memoryUsage,omitempty"`
	DiskUsages    map[string]float64 `protobuf:"bytes,4,rep,name=diskUsages,proto3" json:"diskUsages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	NetworkUsages map[string]float64 `protobuf:"bytes,5,rep,name=networkUsages,proto3" json:"networkUsages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *PerformanceExecMetrics) Reset() {
	*x = PerformanceExecMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_performance_proto_performance_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerformanceExecMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceExecMetrics) ProtoMessage() {}

func (x *PerformanceExecMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_internal_performance_proto_performance_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceExecMetrics.ProtoReflect.Descriptor instead.
func (*PerformanceExecMetrics) Descriptor() ([]byte, []int) {
	return file_internal_performance_proto_performance_proto_rawDescGZIP(), []int{6}
}

func (x *PerformanceExecMetrics) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PerformanceExecMetrics) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *PerformanceExecMetrics) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *PerformanceExecMetrics) GetDiskUsages() map[string]float64 {
	if x != nil {
		return x.DiskUsages
	}
	return nil
}

func (x *PerformanceExecMetrics) GetNetworkUsages() map[string]float64 {
	if x != nil {
		return x.NetworkUsages
	}
	return nil
}

type GlobalVarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room  string          `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	Name  string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value *structpb.Value `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GlobalVarRequest) Reset() {
	*x = GlobalVarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_performance_proto_performance_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalVarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalVarRequest) ProtoMessage() {}

func (x *GlobalVarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_performance_proto_performance_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalVarRequest.ProtoReflect.Descriptor instead.
func (*GlobalVarRequest) Descriptor() ([]byte, []int) {
	return file_internal_performance_proto_performance_proto_rawDescGZIP(), []int{7}
}

func (x *GlobalVarRequest) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *GlobalVarRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GlobalVarRequest) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type GlobalVarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GlobalVarResponse) Reset() {
	*x = GlobalVarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_performance_proto_performance_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalVarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalVarResponse) ProtoMessage() {}

func (x *GlobalVarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_performance_proto_performance_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalVarResponse.ProtoReflect.Descriptor instead.
func (*GlobalVarResponse) Descriptor() ([]byte, []int) {
	return file_internal_performance_proto_performance_proto_rawDescGZIP(), []int{8}
}

func (x *GlobalVarResponse) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_internal_performance_proto_performance_proto protoreflect.FileDescriptor

var file_internal_performance_proto_performance_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x70, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2, 0x01, 0x0a, 0x08, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72,
	0x69, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x52, 0x61, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x61, 0x77, 0x22, 0x4f, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x6f, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x6f, 0x6f, 0x70, 0x22, 0x8c, 0x04, 0x0a, 0x17,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x65, 0x63, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x6e, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x75, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x64, 0x75, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x52, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x61,
	0x72, 0x69, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x56, 0x61, 0x72, 0x73, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x61, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x56, 0x61, 0x72, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x61, 0x77,
	0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x61, 0x77,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x52, 0x61, 0x77, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x6f,
	0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x47, 0x72, 0x70,
	0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x66, 0x6c,
	0x75, 0x78, 0x64, 0x62, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x78, 0x64, 0x62, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x78, 0x64, 0x62, 0x4f, 0x72,
	0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x78, 0x64,
	0x62, 0x4f, 0x72, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x78, 0x64, 0x62,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x66,
	0x6c, 0x75, 0x78, 0x64, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2c, 0x0a, 0x16, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x6f,
	0x70, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0xd2, 0x02, 0x0a, 0x13, 0x50, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x55, 0x55, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x55, 0x55, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76,
	0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x74, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78,
	0x65, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x12, 0x39, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0xe5, 0x01,
	0x0a, 0x15, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x65,
	0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x75, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x76, 0x75, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xa0, 0x03, 0x0a, 0x16, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x0a,
	0x64, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x70, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x58, 0x0a,
	0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x6b, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40, 0x0a, 0x12, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x68, 0x0a, 0x10, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x56, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x29, 0x0a, 0x11, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x56, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x8d, 0x04,
	0x0a, 0x12, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x78,
	0x65, 0x63, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x20, 0x2e, 0x70, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x65,
	0x63, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x45,
	0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x55, 0x0a,
	0x0e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x6f, 0x70, 0x12,
	0x1f, 0x2e, 0x70, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x70, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x28, 0x01, 0x30, 0x01, 0x12, 0x4f, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x6f,
	0x72, 0x47, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x56, 0x61, 0x72, 0x12, 0x19, 0x2e,
	0x70, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x56, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4f, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74,
	0x6f, 0x72, 0x41, 0x64, 0x64, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x56, 0x61, 0x72, 0x12, 0x19,
	0x2e, 0x70, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x56,
	0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x50, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63,
	0x74, 0x6f, 0x72, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x56, 0x61,
	0x72, 0x12, 0x19, 0x2e, 0x70, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x56, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x53, 0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x64,
	0x75, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x56, 0x61, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x56, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0x5a,
	0x08, 0x2f, 0x70, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_internal_performance_proto_performance_proto_rawDescOnce sync.Once
	file_internal_performance_proto_performance_proto_rawDescData = file_internal_performance_proto_performance_proto_rawDesc
)

func file_internal_performance_proto_performance_proto_rawDescGZIP() []byte {
	file_internal_performance_proto_performance_proto_rawDescOnce.Do(func() {
		file_internal_performance_proto_performance_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_performance_proto_performance_proto_rawDescData)
	})
	return file_internal_performance_proto_performance_proto_rawDescData
}

var file_internal_performance_proto_performance_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_internal_performance_proto_performance_proto_goTypes = []interface{}{
	(*Scenario)(nil),                // 0: ptproto.Scenario
	(*Stage)(nil),                   // 1: ptproto.Stage
	(*PerformanceExecStartReq)(nil), // 2: ptproto.PerformanceExecStartReq
	(*PerformanceExecStopReq)(nil),  // 3: ptproto.PerformanceExecStopReq
	(*PerformanceExecResp)(nil),     // 4: ptproto.PerformanceExecResp
	(*PerformanceExecRecord)(nil),   // 5: ptproto.PerformanceExecRecord
	(*PerformanceExecMetrics)(nil),  // 6: ptproto.PerformanceExecMetrics
	(*GlobalVarRequest)(nil),        // 7: ptproto.GlobalVarRequest
	(*GlobalVarResponse)(nil),       // 8: ptproto.GlobalVarResponse
	nil,                             // 9: ptproto.PerformanceExecMetrics.DiskUsagesEntry
	nil,                             // 10: ptproto.PerformanceExecMetrics.NetworkUsagesEntry
	(*structpb.Value)(nil),          // 11: google.protobuf.Value
	(*wrapperspb.Int32Value)(nil),   // 12: google.protobuf.Int32Value
	(*wrapperspb.BoolValue)(nil),    // 13: google.protobuf.BoolValue
}
var file_internal_performance_proto_performance_proto_depIdxs = []int32{
	1,  // 0: ptproto.Scenario.stages:type_name -> ptproto.Stage
	0,  // 1: ptproto.PerformanceExecStartReq.scenarios:type_name -> ptproto.Scenario
	5,  // 2: ptproto.PerformanceExecResp.requests:type_name -> ptproto.PerformanceExecRecord
	6,  // 3: ptproto.PerformanceExecResp.metrics:type_name -> ptproto.PerformanceExecMetrics
	9,  // 4: ptproto.PerformanceExecMetrics.diskUsages:type_name -> ptproto.PerformanceExecMetrics.DiskUsagesEntry
	10, // 5: ptproto.PerformanceExecMetrics.networkUsages:type_name -> ptproto.PerformanceExecMetrics.NetworkUsagesEntry
	11, // 6: ptproto.GlobalVarRequest.value:type_name -> google.protobuf.Value
	2,  // 7: ptproto.PerformanceService.RunnerExecStart:input_type -> ptproto.PerformanceExecStartReq
	3,  // 8: ptproto.PerformanceService.RunnerExecStop:input_type -> ptproto.PerformanceExecStopReq
	7,  // 9: ptproto.PerformanceService.ConductorGetGlobalVar:input_type -> ptproto.GlobalVarRequest
	7,  // 10: ptproto.PerformanceService.ConductorAddGlobalVar:input_type -> ptproto.GlobalVarRequest
	7,  // 11: ptproto.PerformanceService.ConductorClearGlobalVar:input_type -> ptproto.GlobalVarRequest
	7,  // 12: ptproto.PerformanceService.ConductorClearAllGlobalVar:input_type -> ptproto.GlobalVarRequest
	4,  // 13: ptproto.PerformanceService.RunnerExecStart:output_type -> ptproto.PerformanceExecResp
	4,  // 14: ptproto.PerformanceService.RunnerExecStop:output_type -> ptproto.PerformanceExecResp
	12, // 15: ptproto.PerformanceService.ConductorGetGlobalVar:output_type -> google.protobuf.Int32Value
	12, // 16: ptproto.PerformanceService.ConductorAddGlobalVar:output_type -> google.protobuf.Int32Value
	13, // 17: ptproto.PerformanceService.ConductorClearGlobalVar:output_type -> google.protobuf.BoolValue
	13, // 18: ptproto.PerformanceService.ConductorClearAllGlobalVar:output_type -> google.protobuf.BoolValue
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_internal_performance_proto_performance_proto_init() }
func file_internal_performance_proto_performance_proto_init() {
	if File_internal_performance_proto_performance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_performance_proto_performance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scenario); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_performance_proto_performance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_performance_proto_performance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerformanceExecStartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_performance_proto_performance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerformanceExecStopReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_performance_proto_performance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerformanceExecResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_performance_proto_performance_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerformanceExecRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_performance_proto_performance_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerformanceExecMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_performance_proto_performance_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalVarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_performance_proto_performance_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalVarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_performance_proto_performance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_performance_proto_performance_proto_goTypes,
		DependencyIndexes: file_internal_performance_proto_performance_proto_depIdxs,
		MessageInfos:      file_internal_performance_proto_performance_proto_msgTypes,
	}.Build()
	File_internal_performance_proto_performance_proto = out.File
	file_internal_performance_proto_performance_proto_rawDesc = nil
	file_internal_performance_proto_performance_proto_goTypes = nil
	file_internal_performance_proto_performance_proto_depIdxs = nil
}
